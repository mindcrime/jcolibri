//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.27 at 10:46:52 CEST 
//

package jcolibri.xml.methods.impl;

public class ContextConditionTypeImpl implements
		jcolibri.xml.methods.ContextConditionType,
		com.sun.xml.bind.unmarshaller.UnmarshallableObject,
		com.sun.xml.bind.serializer.XMLSerializable,
		com.sun.xml.bind.validator.ValidatableObject {

	protected java.lang.String _CBRTerm;

	protected java.lang.String _MaxOccurrences;

	protected java.lang.String _MinOccurrences;

	protected jcolibri.xml.methods.ParameterType _Parameter;

	private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
			.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u0015\u0083Vppsq\u0000~\u0000\u0000\u0004|\u00b7\u00f5ppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00e3\u00ec\u0089ppsq\u0000~\u0000\u0007\u0000\u00fdm\u00ffppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000~\u00b6\u00fdpp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000~\u00b6\u00f2ppsr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0018L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\u000eOccurrenceTypesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000 \u0001q\u0000~\u0000$t\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\u000f\\p{N}|undefinedsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000eMaxOccurrencesq\u0000~\u0000\u001csq\u0000~\u0000\n\u0000~\u00b6\u00fdpp\u0000q\u0000~\u0000\u0011sq\u0000~\u0000/t\u0000\u000eMinOccurrencesq\u0000~\u0000\u001csq\u0000~\u0000\n\u0001\u00e6~\u0085pp\u0000sq\u0000~\u0000\u000e\u0001\u00e6~zppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000\u0016xq\u0000~\u0000\u0019q\u0000~\u0000\u001ct\u0000\u000bCBRTermTypeq\u0000~\u0000 q\u0000~\u0000$\u0000\u0000\u0000\u0000q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000&q\u0000~\u0000\u001csq\u0000~\u0000/t\u0000\u0007CBRTermq\u0000~\u0000\u001csq\u0000~\u0000\n\u0001\u0098\u00cbjpp\u0000sq\u0000~\u0000\n\u0001\u0098\u00cb_pp\u0000sq\u0000~\u0000\u0000\u0001\u0098\u00cbTppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0098\u00cbIsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001\u0098\u00cbFq\u0000~\u0000Fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000E\u0001q\u0000~\u0000Jsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000Kpsq\u0000~\u0000/t\u0000\"jcolibri.xml.methods.ParameterTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000/t\u0000\tParameterq\u0000~\u0000\u001csq\u0000~\u0000\n\u0001\u0098\u00cb_pp\u0000sq\u0000~\u0000\u0000\u0001\u0098\u00cbTppsq\u0000~\u0000B\u0001\u0098\u00cbIq\u0000~\u0000Fpsq\u0000~\u0000G\u0001\u0098\u00cbFq\u0000~\u0000Fpq\u0000~\u0000Jq\u0000~\u0000Mq\u0000~\u0000Osq\u0000~\u0000/t\u0000\u001ejcolibri.xml.methods.Parameterq\u0000~\u0000Rsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\\[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppq\u0000~\u0000\bpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppq\u0000~\u0000Dq\u0000~\u0000Wpppppppppq\u0000~\u0000Aq\u0000~\u0000Vppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppq\u0000~\u0000\tppppppppppppppppppp");

	private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
		return jcolibri.xml.methods.ContextConditionType.class;
	}

	public java.lang.String getCBRTerm() {
		return _CBRTerm;
	}

	public void setCBRTerm(java.lang.String value) {
		_CBRTerm = value;
	}

	public java.lang.String getMaxOccurrences() {
		return _MaxOccurrences;
	}

	public void setMaxOccurrences(java.lang.String value) {
		_MaxOccurrences = value;
	}

	public java.lang.String getMinOccurrences() {
		return _MinOccurrences;
	}

	public void setMinOccurrences(java.lang.String value) {
		_MinOccurrences = value;
	}

	public jcolibri.xml.methods.ParameterType getParameter() {
		return _Parameter;
	}

	public void setParameter(jcolibri.xml.methods.ParameterType value) {
		_Parameter = value;
	}

	public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(
			com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
		return new jcolibri.xml.methods.impl.ContextConditionTypeImpl.Unmarshaller(
				context);
	}

	public java.lang.Class getPrimaryInterfaceClass() {
		return PRIMARY_INTERFACE_CLASS();
	}

	public void serializeElements(
			com.sun.xml.bind.serializer.XMLSerializer context)
			throws org.xml.sax.SAXException {
		if ((((_MaxOccurrences != null) && (_CBRTerm != null)) && (_MinOccurrences != null))
				&& (_Parameter == null)) {
			context.startElement("", "MaxOccurrences");
			context.endAttributes();
			try {
				context.text(((java.lang.String) _MaxOccurrences));
			} catch (java.lang.Exception e) {
				com.sun.xml.bind.marshaller.Util
						.handlePrintConversionException(this, e, context);
			}
			context.endElement();
			context.startElement("", "MinOccurrences");
			context.endAttributes();
			try {
				context.text(((java.lang.String) _MinOccurrences));
			} catch (java.lang.Exception e) {
				com.sun.xml.bind.marshaller.Util
						.handlePrintConversionException(this, e, context);
			}
			context.endElement();
			context.startElement("", "CBRTerm");
			context.endAttributes();
			try {
				context.text(((java.lang.String) _CBRTerm));
			} catch (java.lang.Exception e) {
				com.sun.xml.bind.marshaller.Util
						.handlePrintConversionException(this, e, context);
			}
			context.endElement();
		} else {
			if ((((_MaxOccurrences == null) && (_CBRTerm == null)) && (_MinOccurrences == null))
					&& (_Parameter != null)) {
				if (_Parameter instanceof javax.xml.bind.Element) {
					context
							.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Parameter));
				} else {
					context.startElement("", "Parameter");
					context
							.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Parameter));
					context.endAttributes();
					context
							.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Parameter));
					context.endElement();
				}
			}
		}
	}

	public void serializeAttributes(
			com.sun.xml.bind.serializer.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	public void serializeAttributeBodies(
			com.sun.xml.bind.serializer.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	public java.lang.Class getPrimaryInterface() {
		return (jcolibri.xml.methods.ContextConditionType.class);
	}

	public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
		return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
				schemaFragment);
	}

	public class Unmarshaller extends
			com.sun.xml.bind.unmarshaller.ContentHandlerEx {

		public Unmarshaller(
				com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
			super(context, "------------");
		}

		protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
			return jcolibri.xml.methods.impl.ContextConditionTypeImpl.this;
		}

		public void enterElement(java.lang.String ___uri,
				java.lang.String ___local, org.xml.sax.Attributes __atts)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			switch (state) {
			case 9:
				revertToParentFromEnterElement(___uri, ___local, __atts);
				return;
			case 3:
				if (("" == ___uri) && ("MinOccurrences" == ___local)) {
					context.pushAttributes(__atts);
					state = 4;
					return;
				}
				break;
			case 0:
				if (("" == ___uri) && ("MaxOccurrences" == ___local)) {
					context.pushAttributes(__atts);
					state = 1;
					return;
				}
				if (("" == ___uri) && ("Parameter" == ___local)) {
					context.pushAttributes(__atts);
					state = 10;
					return;
				}
				break;
			case 6:
				if (("" == ___uri) && ("CBRTerm" == ___local)) {
					context.pushAttributes(__atts);
					state = 7;
					return;
				}
				break;
			case 10:
				if (("" == ___uri) && ("Name" == ___local)) {
					_Parameter = ((jcolibri.xml.methods.impl.ParameterTypeImpl) spawnChildFromEnterElement(
							(jcolibri.xml.methods.impl.ParameterTypeImpl.class),
							11, ___uri, ___local, __atts));
					return;
				}
				break;
			}
			super.enterElement(___uri, ___local, __atts);
		}

		public void leaveElement(java.lang.String ___uri,
				java.lang.String ___local)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			switch (state) {
			case 11:
				if (("" == ___uri) && ("Parameter" == ___local)) {
					context.popAttributes();
					state = 9;
					return;
				}
				break;
			case 9:
				revertToParentFromLeaveElement(___uri, ___local);
				return;
			case 5:
				if (("" == ___uri) && ("MinOccurrences" == ___local)) {
					context.popAttributes();
					state = 6;
					return;
				}
				break;
			case 8:
				if (("" == ___uri) && ("CBRTerm" == ___local)) {
					context.popAttributes();
					state = 9;
					return;
				}
				break;
			case 2:
				if (("" == ___uri) && ("MaxOccurrences" == ___local)) {
					context.popAttributes();
					state = 3;
					return;
				}
				break;
			}
			super.leaveElement(___uri, ___local);
		}

		public void enterAttribute(java.lang.String ___uri,
				java.lang.String ___local)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			switch (state) {
			case 9:
				revertToParentFromEnterAttribute(___uri, ___local);
				return;
			}
			super.enterAttribute(___uri, ___local);
		}

		public void leaveAttribute(java.lang.String ___uri,
				java.lang.String ___local)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			switch (state) {
			case 9:
				revertToParentFromLeaveAttribute(___uri, ___local);
				return;
			}
			super.leaveAttribute(___uri, ___local);
		}

		public void text(java.lang.String value)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			try {
				switch (state) {
				case 7:
					try {
						_CBRTerm = value;
					} catch (java.lang.Exception e) {
						handleParseConversionException(e);
					}
					state = 8;
					return;
				case 9:
					revertToParentFromText(value);
					return;
				case 1:
					try {
						_MaxOccurrences = value;
					} catch (java.lang.Exception e) {
						handleParseConversionException(e);
					}
					state = 2;
					return;
				case 4:
					try {
						_MinOccurrences = value;
					} catch (java.lang.Exception e) {
						handleParseConversionException(e);
					}
					state = 5;
					return;
				}
			} catch (java.lang.RuntimeException e) {
				handleUnexpectedTextException(value, e);
			}
		}

		public void leaveChild(int nextState)
				throws com.sun.xml.bind.unmarshaller.UnreportedException {
			switch (nextState) {
			case 11:
				state = 11;
				return;
			}
			super.leaveChild(nextState);
		}

	}

}
