package jcolibri.gui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;

import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

import jcolibri.cbrcore.CBRTask;
import jcolibri.cbrcore.PrototypeTaskPkgReg;
import jcolibri.cbrcore.PrototypeTasksRegistry;
import jcolibri.cbrcore.packagemanager.PackageInfo;
import jcolibri.cbrcore.packagemanager.PackageManager;
import jcolibri.gui.model.TasksTableModel;
import jcolibri.util.ImagesContainer;

/**
 * 
 * @author Juan José Bello
 */
public class TasksFrame extends javax.swing.JInternalFrame {
	private static final long serialVersionUID = 1L;

	/** Creates new form TasksFrame */
	public TasksFrame() {
		initComponents();
		myInitComponents();
	}

	/**
	 * This method is called from within the constructor and after
	 * initComponents method to initialize the form.
	 */
	private void myInitComponents() {
		tasksTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		mainPanel = new javax.swing.JPanel();
		tablePanel = new javax.swing.JPanel();
		buttonsPanel = new javax.swing.JPanel();
		closeButton = new javax.swing.JButton();
		tableScrollPane = new javax.swing.JScrollPane();
		tasksTable = new javax.swing.JTable();
		topButtonsPanel = new javax.swing.JPanel();
		newButton = new javax.swing.JButton();
		deleteButton = new javax.swing.JButton();
		packagesPanel = new javax.swing.JPanel();
		packagesLabel = new javax.swing.JLabel();
		packagesComboBox = new javax.swing.JComboBox();
		northPanel = new javax.swing.JPanel();
		editButton = new JButton();

        setFrameIcon(ImagesContainer.TASK_DECOM);
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setResizable(true);
		setTitle("Manage Tasks");
		mainPanel.setLayout(new java.awt.BorderLayout());

		tablePanel.setLayout(new java.awt.BorderLayout());

		closeButton.setText("Close");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		buttonsPanel.add(closeButton);

		tablePanel.add(buttonsPanel, java.awt.BorderLayout.SOUTH);

		tasksTable.setModel(new TasksTableModel());
		tableScrollPane.setViewportView(tasksTable);

		tablePanel.add(tableScrollPane, java.awt.BorderLayout.CENTER);

		packagesLabel.setText("Package:");
		packagesComboBox.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				String pkgName;
				pkgName = (String) packagesComboBox.getSelectedItem();
				((TasksTableModel) tasksTable.getModel()).setPackage(pkgName);
			}
		});
		updatePackages();
		packagesPanel.add(packagesLabel);
		packagesPanel.add(packagesComboBox);

		newButton.setIcon(ImagesContainer.NEW);
		newButton.setToolTipText("New task");
		newButton.setPreferredSize(new java.awt.Dimension(20, 20));
		newButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				newButtonActionPerformed(evt);
			}
		});

		topButtonsPanel.add(newButton);

		editButton.setIcon(ImagesContainer.EDIT);
		editButton.setToolTipText("Edit task");
		editButton.setPreferredSize(new java.awt.Dimension(20, 20));
		editButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				editButtonActionPerformed(evt);
			}
		});

		topButtonsPanel.add(editButton);

		deleteButton.setIcon(ImagesContainer.DELETE);
		deleteButton.setToolTipText("Delete task");
		deleteButton.setPreferredSize(new java.awt.Dimension(20, 20));
		deleteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteButtonActionPerformed(evt);
			}
		});

		topButtonsPanel.add(deleteButton);

		northPanel.setLayout(new BorderLayout());
		northPanel.add(packagesPanel, BorderLayout.LINE_START);
		northPanel.add(topButtonsPanel, BorderLayout.LINE_END);

		tablePanel.add(northPanel, java.awt.BorderLayout.NORTH);

		mainPanel.add(tablePanel, java.awt.BorderLayout.CENTER);

		getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);
		setBounds(0, 0, 500, 300);
	}// GEN-END:initComponents

	private void updatePackages() {
		Iterator it;
		PackageInfo pkgInfo;

		packagesComboBox.removeAllItems();
		it = PackageManager.getInstance().getActivePackages().iterator();
		while (it.hasNext()) {
			pkgInfo = (PackageInfo) it.next();
			packagesComboBox.addItem(pkgInfo.getName());
		}
	}

	private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newButtonActionPerformed
		addTask();
	}// GEN-LAST:event_newButtonActionPerformed

	private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {
		editTask();
	}

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteButtonActionPerformed
		if (tasksTable.getSelectedRow() != -1) {
			removeTask(tasksTable.getSelectedRow());
		}
	}// GEN-LAST:event_deleteButtonActionPerformed

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeButtonActionPerformed
		this.dispose();
	}// GEN-LAST:event_closeButtonActionPerformed

	private void removeTask(int idx) {
		String pkgName = (String) packagesComboBox.getSelectedItem();
		PrototypeTaskPkgReg ptPkgReg = PrototypeTasksRegistry.getInstance()
				.getPrototypeTaskPkg(pkgName);
		try {
			ptPkgReg.removeTask(idx);
			ptPkgReg.storeRegistry();
		} catch (jcolibri.cbrcore.exception.InternalException ie) {
			JOptionPane.showMessageDialog(this, "Error while storing tasks",
					"Error", JOptionPane.ERROR_MESSAGE);
		}
	}

	private void addTask() {
		String pkgName = (String) packagesComboBox.getSelectedItem();
		PrototypeTaskPkgReg ptPkgReg = PrototypeTasksRegistry.getInstance()
				.getPrototypeTaskPkg(pkgName);
		CBRTask task = new CBRTask("", "");
		JInternalFrame intf = new EdiTaskFrame(false, ptPkgReg, task);
		this.getDesktopPane().add(intf);
		intf.show();
	}

	private void editTask() {
		CBRTask task;

		if (tasksTable.getSelectedRow() >= 0) {
			String pkgName = (String) packagesComboBox.getSelectedItem();
			PrototypeTaskPkgReg ptPkgReg = PrototypeTasksRegistry.getInstance()
					.getPrototypeTaskPkg(pkgName);
			task = ((TasksTableModel) tasksTable.getModel()).getTask(tasksTable
					.getSelectedRow());
			JInternalFrame intf = new EdiTaskFrame(true, ptPkgReg, task);
			this.getDesktopPane().add(intf);
			intf.show();
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel buttonsPanel;

	private javax.swing.JButton closeButton;

	private javax.swing.JButton deleteButton;

	private javax.swing.JPanel mainPanel;

	private javax.swing.JButton newButton;

	private javax.swing.JPanel tablePanel;

	private javax.swing.JScrollPane tableScrollPane;

	private javax.swing.JTable tasksTable;

	private javax.swing.JPanel topButtonsPanel;

	private javax.swing.JPanel packagesPanel;

	private javax.swing.JLabel packagesLabel;

	private javax.swing.JComboBox packagesComboBox;

	private javax.swing.JPanel northPanel;

	private javax.swing.JButton editButton;
	// End of variables declaration//GEN-END:variables

}